// <auto-generated />
using System;
using Lottery.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lottery.WebAPI.Migrations
{
    [DbContext(typeof(LotteryDbContext))]
    [Migration("20180602185808_InitialDbSchema")]
    partial class InitialDbSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lottery.Models.Lottery", b =>
                {
                    b.Property<int>("Id");

                    b.Property<DateTime>("DateOfConducting");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .HasName("INX_NUMBER");

                    b.ToTable("Lotteries");

                    b.HasData(
                        new { Id = 1, DateOfConducting = new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Number = "101" },
                        new { Id = 2, DateOfConducting = new DateTime(2018, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Number = "102" },
                        new { Id = 3, DateOfConducting = new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Number = "103" }
                    );
                });

            modelBuilder.Entity("Lottery.Models.Ticket", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("IsWinning");

                    b.Property<int>("LotteryId");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .HasName("INX_NUMBER");

                    b.HasIndex("LotteryId", "Number")
                        .IsUnique();

                    b.ToTable("Tickets");

                    b.HasData(
                        new { Id = 1, IsWinning = false, LotteryId = 1, Number = "AS7239G" },
                        new { Id = 2, IsWinning = false, LotteryId = 1, Number = "AL7249J" },
                        new { Id = 3, IsWinning = true, LotteryId = 1, Number = "BS7K3LP" },
                        new { Id = 4, IsWinning = false, LotteryId = 2, Number = "9L7Y69G" },
                        new { Id = 5, IsWinning = true, LotteryId = 2, Number = "AY7739U" },
                        new { Id = 6, IsWinning = false, LotteryId = 2, Number = "A8MN390" },
                        new { Id = 7, IsWinning = true, LotteryId = 3, Number = "Z888399" },
                        new { Id = 8, IsWinning = false, LotteryId = 3, Number = "Z677392" },
                        new { Id = 9, IsWinning = false, LotteryId = 3, Number = "3607391" },
                        new { Id = 10, IsWinning = false, LotteryId = 3, Number = "08J8K19" }
                    );
                });

            modelBuilder.Entity("Lottery.Models.Ticket", b =>
                {
                    b.HasOne("Lottery.Models.Lottery", "Lottery")
                        .WithMany("Tickets")
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
